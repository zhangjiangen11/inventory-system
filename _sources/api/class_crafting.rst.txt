:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc_classes/Crafting.xml.

.. _class_Crafting:

Crafting
========

**Inherits:** ``Resource``

Resource that identifies a creation process happening in :ref:`CraftStation<class_CraftStation>`.

.. rst-class:: classref-introduction-group

Description
-----------

Crafting process is stored in its own resource and can be serialized (:ref:`serialize()<class_Crafting_method_serialize>`) and deserialized (:ref:`deserialize()<class_Crafting_method_deserialize>`) for persistence and networking purposes. It also contains a :ref:`process()<class_Crafting_method_process>` that is called to update the time process of a crafting.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-----------+-----------------------------------------------------------+---------+
   | ``int``   | :ref:`recipe_index<class_Crafting_property_recipe_index>` | ``0``   |
   +-----------+-----------------------------------------------------------+---------+
   | ``float`` | :ref:`time<class_Crafting_property_time>`                 | ``0.0`` |
   +-----------+-----------------------------------------------------------+---------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +----------------+------------------------------------------------------------------------------------+
   | |void|         | :ref:`deserialize<class_Crafting_method_deserialize>`\ (\ data\: ``Dictionary``\ ) |
   +----------------+------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`is_finished<class_Crafting_method_is_finished>`\ (\ ) |const|                |
   +----------------+------------------------------------------------------------------------------------+
   | |void|         | :ref:`process<class_Crafting_method_process>`\ (\ delta\: ``float``\ )             |
   +----------------+------------------------------------------------------------------------------------+
   | ``Dictionary`` | :ref:`serialize<class_Crafting_method_serialize>`\ (\ ) |const|                    |
   +----------------+------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Crafting_property_recipe_index:

.. rst-class:: classref-property

``int`` **recipe_index** = ``0`` :ref:`ðŸ”—<class_Crafting_property_recipe_index>`

.. rst-class:: classref-property-setget

- |void| **set_recipe_index**\ (\ value\: ``int``\ )
- ``int`` **get_recipe_index**\ (\ )

Recipe index on :ref:`CraftStation<class_CraftStation>`.

.. rst-class:: classref-item-separator

----

.. _class_Crafting_property_time:

.. rst-class:: classref-property

``float`` **time** = ``0.0`` :ref:`ðŸ”—<class_Crafting_property_time>`

.. rst-class:: classref-property-setget

- |void| **set_time**\ (\ value\: ``float``\ )
- ``float`` **get_time**\ (\ )

Elapsed crafting time.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Crafting_method_deserialize:

.. rst-class:: classref-method

|void| **deserialize**\ (\ data\: ``Dictionary``\ ) :ref:`ðŸ”—<class_Crafting_method_deserialize>`

Updates the data for this crafting process with a ``data`` dictionary. Useful for game persistence and network synchronization.

.. rst-class:: classref-item-separator

----

.. _class_Crafting_method_is_finished:

.. rst-class:: classref-method

``bool`` **is_finished**\ (\ ) |const| :ref:`ðŸ”—<class_Crafting_method_is_finished>`

Returns true if this crafting has finished.

.. rst-class:: classref-item-separator

----

.. _class_Crafting_method_process:

.. rst-class:: classref-method

|void| **process**\ (\ delta\: ``float``\ ) :ref:`ðŸ”—<class_Crafting_method_process>`

Calls a time process for crafting to happen, this should be called by :ref:`CraftStation<class_CraftStation>`.

.. rst-class:: classref-item-separator

----

.. _class_Crafting_method_serialize:

.. rst-class:: classref-method

``Dictionary`` **serialize**\ (\ ) |const| :ref:`ðŸ”—<class_Crafting_method_serialize>`

Transforms crafting process data into a dictionary. Useful for game persistence and network synchronization.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
