:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc_classes/ItemDefinition.xml.

.. _class_ItemDefinition:

ItemDefinition
==============

**Inherits:** ``Resource``

.. rst-class:: classref-introduction-group

Description
-----------

Abstract definition of an item, with values for stack, icon, name, etc.

This definition is not the same as a String placed in the inventory, the item added to an inventory needs this definition to know how many items can be added to a :ref:`ItemStack<class_ItemStack>`.

This resource is configured and added to the items list of the :ref:`InventoryDatabase<class_InventoryDatabase>`. This can be easily changed in the plugin's own editor.

.. rst-class:: classref-introduction-group

Tutorials
---------

- `Creating items in database <https://github.com/expressobits/inventory-system/wiki/Creating-Items-in-Database>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``bool``                                                             | :ref:`can_stack<class_ItemDefinition_property_can_stack>`                   | ``true``           |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | :ref:`Array<class_Array>`\[:ref:`ItemCategory<class_ItemCategory>`\] | :ref:`categories<class_ItemDefinition_property_categories>`                 | ``[]``             |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | :ref:`Array<class_Array>`\[``String``\]                              | :ref:`dynamic_properties<class_ItemDefinition_property_dynamic_properties>` | ``[]``             |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``Texture2D``                                                        | :ref:`icon<class_ItemDefinition_property_icon>`                             |                    |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``String``                                                           | :ref:`id<class_ItemDefinition_property_id>`                                 | ``""``             |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``int``                                                              | :ref:`max_stack<class_ItemDefinition_property_max_stack>`                   | ``0``              |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``String``                                                           | :ref:`name<class_ItemDefinition_property_name>`                             | ``""``             |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``Dictionary``                                                       | :ref:`properties<class_ItemDefinition_property_properties>`                 | ``{}``             |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``Vector2i``                                                         | :ref:`size<class_ItemDefinition_property_size>`                             | ``Vector2i(1, 1)`` |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+
   | ``float``                                                            | :ref:`weight<class_ItemDefinition_property_weight>`                         | ``0.0``            |
   +----------------------------------------------------------------------+-----------------------------------------------------------------------------+--------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +--------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``Vector2i`` | :ref:`get_rotated_size<class_ItemDefinition_method_get_rotated_size>`\ (\ ) |const|                                                 |
   +--------------+-------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``     | :ref:`is_of_category<class_ItemDefinition_method_is_of_category>`\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const| |
   +--------------+-------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_ItemDefinition_property_can_stack:

.. rst-class:: classref-property

``bool`` **can_stack** = ``true`` :ref:`ðŸ”—<class_ItemDefinition_property_can_stack>`

.. rst-class:: classref-property-setget

- |void| **set_can_stack**\ (\ value\: ``bool``\ )
- ``bool`` **get_can_stack**\ (\ )

Defines whether there is a :ref:`max_stack<class_ItemDefinition_property_max_stack>` for the item containing this item definition, unchecked means only one item is added to the stack.

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_categories:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`ItemCategory<class_ItemCategory>`\] **categories** = ``[]`` :ref:`ðŸ”—<class_ItemDefinition_property_categories>`

.. rst-class:: classref-property-setget

- |void| **set_categories**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`ItemCategory<class_ItemCategory>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`ItemCategory<class_ItemCategory>`\] **get_categories**\ (\ )

Categories this item is in are used for categorized stacks to only accept specific items. See in :ref:`InventoryConstraint<class_ItemDefinition_property_InventoryConstraint>`

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_dynamic_properties:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[``String``\] **dynamic_properties** = ``[]`` :ref:`ðŸ”—<class_ItemDefinition_property_dynamic_properties>`

.. rst-class:: classref-property-setget

- |void| **set_dynamic_properties**\ (\ value\: :ref:`Array<class_Array>`\[``String``\]\ )
- :ref:`Array<class_Array>`\[``String``\] **get_dynamic_properties**\ (\ )

Properties that are defined as dynamic and are calculated for individual items within the stack. Can only be used when :ref:`max_stack<class_ItemDefinition_property_max_stack>` is 1.

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_icon:

.. rst-class:: classref-property

``Texture2D`` **icon** :ref:`ðŸ”—<class_ItemDefinition_property_icon>`

.. rst-class:: classref-property-setget

- |void| **set_icon**\ (\ value\: ``Texture2D``\ )
- ``Texture2D`` **get_icon**\ (\ )

Item icon in texture2D, displayed by UI e.g.

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_id:

.. rst-class:: classref-property

``String`` **id** = ``""`` :ref:`ðŸ”—<class_ItemDefinition_property_id>`

.. rst-class:: classref-property-setget

- |void| **set_id**\ (\ value\: ``String``\ )
- ``String`` **get_id**\ (\ )

Unique item identifier String within the :ref:`InventoryDatabase<class_InventoryDatabase>`.

This String can be used in the database to return an item by its id See :ref:`InventoryDatabase.get_item<class_InventoryDatabase_property_get_item>`

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_max_stack:

.. rst-class:: classref-property

``int`` **max_stack** = ``0`` :ref:`ðŸ”—<class_ItemDefinition_property_max_stack>`

.. rst-class:: classref-property-setget

- |void| **set_max_stack**\ (\ value\: ``int``\ )
- ``int`` **get_max_stack**\ (\ )

Maximum stackable item in an inventory, only used if :ref:`can_stack<class_ItemDefinition_property_can_stack>` is active.

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_name:

.. rst-class:: classref-property

``String`` **name** = ``""`` :ref:`ðŸ”—<class_ItemDefinition_property_name>`

.. rst-class:: classref-property-setget

- |void| **set_name**\ (\ value\: ``String``\ )
- ``String`` **get_name**\ (\ )

Name of the item to be displayed in the UI e.g.

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_properties:

.. rst-class:: classref-property

``Dictionary`` **properties** = ``{}`` :ref:`ðŸ”—<class_ItemDefinition_property_properties>`

.. rst-class:: classref-property-setget

- |void| **set_properties**\ (\ value\: ``Dictionary``\ )
- ``Dictionary`` **get_properties**\ (\ )

Properties of this item, additional information here can be added (For example the 3d item that drops from this item, or its item from the player's hand, etc.)

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_size:

.. rst-class:: classref-property

``Vector2i`` **size** = ``Vector2i(1, 1)`` :ref:`ðŸ”—<class_ItemDefinition_property_size>`

.. rst-class:: classref-property-setget

- |void| **set_size**\ (\ value\: ``Vector2i``\ )
- ``Vector2i`` **get_size**\ (\ )

Size of the item in Vector2i, used to calculate the size of item in :ref:`GridInventory<class_GridInventory>`.

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_property_weight:

.. rst-class:: classref-property

``float`` **weight** = ``0.0`` :ref:`ðŸ”—<class_ItemDefinition_property_weight>`

.. rst-class:: classref-property-setget

- |void| **set_weight**\ (\ value\: ``float``\ )
- ``float`` **get_weight**\ (\ )

Weight of the item, used to calculate the weight of the inventory.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_ItemDefinition_method_get_rotated_size:

.. rst-class:: classref-method

``Vector2i`` **get_rotated_size**\ (\ ) |const| :ref:`ðŸ”—<class_ItemDefinition_method_get_rotated_size>`

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. rst-class:: classref-item-separator

----

.. _class_ItemDefinition_method_is_of_category:

.. rst-class:: classref-method

``bool`` **is_of_category**\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const| :ref:`ðŸ”—<class_ItemDefinition_method_is_of_category>`

Returns true if this item is from ``category``.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
