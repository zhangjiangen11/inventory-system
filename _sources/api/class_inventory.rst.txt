:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc_classes/Inventory.xml.

.. _class_Inventory:

Inventory
=========

**Inherits:** :ref:`NodeInventories<class_NodeInventories>` **<** ``Node``

**Inherited By:** :ref:`GridInventory<class_GridInventory>`

This node is a stack container.

.. rst-class:: classref-introduction-group

Description
-----------

Each stack contains data about amount, :ref:`ItemStack<class_ItemStack>`\ (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`) and custom properties.

Stacks are stored in an Array, which can be accessed with inventory.stacks, but it is best to avoid changing data directly and instead use methods within this node, such as :ref:`add()<class_Inventory_method_add>`, :ref:`remove()<class_Inventory_method_remove>`, :ref:`set_stack_content()<class_Inventory_method_set_stack_content>`, ...

The methods correctly call signals when necessary.



Some methods have their general version and a direct version of some ``Stack`` index, such as :ref:`contains()<class_Inventory_method_contains>` and :ref:`contains_at()<class_Inventory_method_contains_at>`.

.. rst-class:: classref-introduction-group

Tutorials
---------

- `Add items to inventory <https://expressobits.com/inventory-system/getting_started/quickstart/add_items_to_inventory.html>`__

- `Operations between Inventories <https://expressobits.com/inventory-system/getting_started/quickstart/operation_between_inventories.html>`__

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +------------------------------------------------------------------------------------+----------------------------------------------------------------+-----------------+
   | :ref:`Array<class_Array>`\[:ref:`InventoryConstraint<class_InventoryConstraint>`\] | :ref:`constraints<class_Inventory_property_constraints>`       | ``[]``          |
   +------------------------------------------------------------------------------------+----------------------------------------------------------------+-----------------+
   | ``String``                                                                         | :ref:`inventory_name<class_Inventory_property_inventory_name>` | ``"Inventory"`` |
   +------------------------------------------------------------------------------------+----------------------------------------------------------------+-----------------+
   | :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\]                     | :ref:`stacks<class_Inventory_property_stacks>`                 | ``[]``          |
   +------------------------------------------------------------------------------------+----------------------------------------------------------------+-----------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`add<class_Inventory_method_add>`\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}, drop_excess\: ``bool`` = false\ )                                        |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`add_at_index<class_Inventory_method_add_at_index>`\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ )                               |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`add_on_new_stack<class_Inventory_method_add_on_new_stack>`\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}, can_emit_signal\: ``bool`` = true\ )           |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`add_to_stack<class_Inventory_method_add_to_stack>`\ (\ stack\: :ref:`ItemStack<class_ItemStack>`, item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ )           |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`amount_of_item<class_Inventory_method_amount_of_item>`\ (\ item_id\: ``String``\ ) |const|                                                                                                  |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`can_add_new_stack<class_Inventory_method_can_add_new_stack>`\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) |const|                                    |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`clear<class_Inventory_method_clear>`\ (\ )                                                                                                                                                  |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`contains<class_Inventory_method_contains>`\ (\ item_id\: ``String``, amount\: ``int`` = 1\ ) |const|                                                                                        |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`contains_at<class_Inventory_method_contains_at>`\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1\ ) |const|                                                           |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`contains_category<class_Inventory_method_contains_category>`\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`, amount\: ``int`` = 1\ ) |const|                                        |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`contains_category_in_stack<class_Inventory_method_contains_category_in_stack>`\ (\ stack\: :ref:`ItemStack<class_ItemStack>`, category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const| |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`deserialize<class_Inventory_method_deserialize>`\ (\ data\: ``Dictionary``\ )                                                                                                               |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`drop<class_Inventory_method_drop>`\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ )                                                                      |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`drop_all_stacks<class_Inventory_method_drop_all_stacks>`\ (\ )                                                                                                                              |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`drop_from_inventory<class_Inventory_method_drop_from_inventory>`\ (\ stack_index\: ``int``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ )                                       |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`get_amount<class_Inventory_method_get_amount>`\ (\ ) |const|                                                                                                                                |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`get_amount_of_category<class_Inventory_method_get_amount_of_category>`\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const|                                                    |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`get_stack_index_with_an_item_of_category<class_Inventory_method_get_stack_index_with_an_item_of_category>`\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const|                |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`has_space_for<class_Inventory_method_has_space_for>`\ (\ item\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) |const|                                               |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`has_stack<class_Inventory_method_has_stack>`\ (\ stack\: :ref:`ItemStack<class_ItemStack>`\ ) |const|                                                                                       |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`is_empty<class_Inventory_method_is_empty>`\ (\ ) |const|                                                                                                                                    |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`is_full<class_Inventory_method_is_full>`\ (\ ) |const|                                                                                                                                      |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`remove<class_Inventory_method_remove>`\ (\ item_id\: ``String``, amount\: ``int`` = 1\ )                                                                                                    |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`remove_at<class_Inventory_method_remove_at>`\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1\ )                                                                       |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`remove_from_stack<class_Inventory_method_remove_from_stack>`\ (\ stack\: :ref:`ItemStack<class_ItemStack>`, item_id\: ``String``, amount\: ``int`` = 1\ )                                   |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`remove_stack<class_Inventory_method_remove_stack>`\ (\ stack_index\: ``int``\ )                                                                                                             |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``Dictionary`` | :ref:`serialize<class_Inventory_method_serialize>`\ (\ ) |const|                                                                                                                                  |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`set_stack_content<class_Inventory_method_set_stack_content>`\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ )                     |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``bool``       | :ref:`split<class_Inventory_method_split>`\ (\ stack_index\: ``int``, amount\: ``int`` = 1\ )                                                                                                     |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`transfer<class_Inventory_method_transfer>`\ (\ stack_index\: ``int``, destination\: :ref:`Inventory<class_Inventory>`, amount\: ``int`` = 1\ )                                              |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | ``int``        | :ref:`transfer_at<class_Inventory_method_transfer_at>`\ (\ stack_index\: ``int``, destination\: :ref:`Inventory<class_Inventory>`, destination_stack_index\: ``int``, amount\: ``int`` = 1\ )     |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|         | :ref:`update_stack<class_Inventory_method_update_stack>`\ (\ stack_index\: ``int``\ )                                                                                                             |
   +----------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_Inventory_signal_contents_changed:

.. rst-class:: classref-signal

**contents_changed**\ (\ ) :ref:`🔗<class_Inventory_signal_contents_changed>`

Emitted when the contents of the inventory change.

This signal is emitted after the :ref:`remove()<class_Inventory_method_remove>`, :ref:`remove_at()<class_Inventory_method_remove_at>`, :ref:`set_stack_content()<class_Inventory_method_set_stack_content>`, :ref:`add()<class_Inventory_method_add>`, :ref:`add_at()<class_Inventory_method_add_at>` or :ref:`update_stack()<class_Inventory_method_update_stack>` function.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_emptied:

.. rst-class:: classref-signal

**emptied**\ (\ ) :ref:`🔗<class_Inventory_signal_emptied>`

Emitted when inventory is empty. This signal is emitted after the :ref:`remove()<class_Inventory_method_remove>`, :ref:`remove_at()<class_Inventory_method_remove_at>` or :ref:`set_stack_content()<class_Inventory_method_set_stack_content>` function and it only happens when there are no stacks.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_filled:

.. rst-class:: classref-signal

**filled**\ (\ ) :ref:`🔗<class_Inventory_signal_filled>`

Emitted when inventory is filled. This signal is emitted after the :ref:`add()<class_Inventory_method_add>`, :ref:`add_at()<class_Inventory_method_add_at>` or :ref:`set_stack_content()<class_Inventory_method_set_stack_content>` function and it only happens when all stacks are filled.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_item_added:

.. rst-class:: classref-signal

**item_added**\ (\ item_id\: ``String``, amount\: ``int``\ ) :ref:`🔗<class_Inventory_signal_item_added>`

Emitted when a ``Item`` was added.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_item_removed:

.. rst-class:: classref-signal

**item_removed**\ (\ item_id\: ``String``, amount\: ``int``\ ) :ref:`🔗<class_Inventory_signal_item_removed>`

Emitted when a ``Item`` was removed.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_request_drop_item:

.. rst-class:: classref-signal

**request_drop_item**\ (\ item_id\: ``String``, amount\: ``int``, item_properties\: ``Dictionary``\ ) :ref:`🔗<class_Inventory_signal_request_drop_item>`

Emitted when the :ref:`drop()<class_Inventory_method_drop>` method is called (Usually called within :ref:`drop_from_inventory()<class_Inventory_method_drop_from_inventory>` or :ref:`drop_all_stacks()<class_Inventory_method_drop_all_stacks>`).

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_stack_added:

.. rst-class:: classref-signal

**stack_added**\ (\ stack_index\: ``int``\ ) :ref:`🔗<class_Inventory_signal_stack_added>`

Emitted when a new stack is added to the inventory.

This signal is emitted after the :ref:`add()<class_Inventory_method_add>`, :ref:`add_at()<class_Inventory_method_add_at>` or :ref:`add_new_stack()<class_Inventory_method_add_new_stack>` function.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_stack_removed:

.. rst-class:: classref-signal

**stack_removed**\ (\ stack_index\: ``int``\ ) :ref:`🔗<class_Inventory_signal_stack_removed>`

Emitted when a stack is removed from the inventory.

This signal is emitted after the :ref:`remove()<class_Inventory_method_remove>`, :ref:`remove_at()<class_Inventory_method_remove_at>` or :ref:`remove_stack()<class_Inventory_method_remove_stack>` function.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_signal_updated_stack:

.. rst-class:: classref-signal

**updated_stack**\ (\ stack_index\: ``int``\ ) :ref:`🔗<class_Inventory_signal_updated_stack>`

Emitted when a stack is updated.

This signal is emitted after the :ref:`update_stack()<class_Inventory_method_update_stack>` function.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Inventory_property_constraints:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`InventoryConstraint<class_InventoryConstraint>`\] **constraints** = ``[]`` :ref:`🔗<class_Inventory_property_constraints>`

.. rst-class:: classref-property-setget

- |void| **set_constraints**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`InventoryConstraint<class_InventoryConstraint>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`InventoryConstraint<class_InventoryConstraint>`\] **get_constraints**\ (\ )

Resources that extend :ref:`InventoryConstraint<class_InventoryConstraint>` and define rules about inventory additions.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_property_inventory_name:

.. rst-class:: classref-property

``String`` **inventory_name** = ``"Inventory"`` :ref:`🔗<class_Inventory_property_inventory_name>`

.. rst-class:: classref-property-setget

- |void| **set_inventory_name**\ (\ value\: ``String``\ )
- ``String`` **get_inventory_name**\ (\ )

The name of the inventory, to be displayed in UI.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_property_stacks:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **stacks** = ``[]`` :ref:`🔗<class_Inventory_property_stacks>`

.. rst-class:: classref-property-setget

- |void| **set_stacks**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **get_stacks**\ (\ )

:ref:`ItemStack<class_ItemStack>` list, which stores three pieces of information: item_id, amount and dynamic properties of the items.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Inventory_method_add:

.. rst-class:: classref-method

``int`` **add**\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}, drop_excess\: ``bool`` = false\ ) :ref:`🔗<class_Inventory_method_add>`

Adds an amount of :ref:`ItemStack<class_ItemStack>` to the inventory and returns the amount that cannot be added.


.. tabs::

 .. code-tab:: gdscript

    inventory.add("my_item_id", 2) # Add two my_item_id to inventory





There are cases where the inventory may be full or does not accept this item by its category, so the return of this call corresponds to the quantity that was not added (If it returns 0 it means that all items were added correctly)


.. tabs::

 .. code-tab:: gdscript

    var unadded_amount = inventory.add("my_item_id", 2) # Add two my_item to inventory
    if unadded_amount == 0:
        print("All items added!")
    else:
        print(unadded_amount, " items were not added")



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_add_at_index:

.. rst-class:: classref-method

``int`` **add_at_index**\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) :ref:`🔗<class_Inventory_method_add_at_index>`

Adds an amount of :ref:`ItemStack<class_ItemStack>`\ (with string id from :ref:`InventoryDatabase<class_InventoryDatabase>`) to a specific inventory stack index and returns the amount that cannot be added.


.. tabs::

 .. code-tab:: gdscript

    inventory.add_at_index(3, "my_item_id", 2) # Add two my_item to inventory in 3 stack index



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_add_on_new_stack:

.. rst-class:: classref-method

``int`` **add_on_new_stack**\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}, can_emit_signal\: ``bool`` = true\ ) :ref:`🔗<class_Inventory_method_add_on_new_stack>`

Add ``item_id`` to a new stack, ignoring the possibility of adding that item to an existing stack.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_add_to_stack:

.. rst-class:: classref-method

``int`` **add_to_stack**\ (\ stack\: :ref:`ItemStack<class_ItemStack>`, item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) :ref:`🔗<class_Inventory_method_add_to_stack>`

Adds an amount of item_id to the specified stack and returns the amount that cannot be added.


.. tabs::

 .. code-tab:: gdscript

    inventory.add_to_stack(stack, "my_item_id", 2) # Add two my_item to inventory in stack



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_amount_of_item:

.. rst-class:: classref-method

``int`` **amount_of_item**\ (\ item_id\: ``String``\ ) |const| :ref:`🔗<class_Inventory_method_amount_of_item>`

Returns amount of the specified :ref:`ItemStack<class_ItemStack>`.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_can_add_new_stack:

.. rst-class:: classref-method

``bool`` **can_add_new_stack**\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) |const| :ref:`🔗<class_Inventory_method_can_add_new_stack>`

Returns true if it is possible to add a new stack to the inventory, note that this method consults the configured constraints.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_clear:

.. rst-class:: classref-method

|void| **clear**\ (\ ) :ref:`🔗<class_Inventory_method_clear>`

Clears the inventory, removing all stacks.


.. tabs::

 .. code-tab:: gdscript

    inventory.clear() # Clear inventory



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_contains:

.. rst-class:: classref-method

``bool`` **contains**\ (\ item_id\: ``String``, amount\: ``int`` = 1\ ) |const| :ref:`🔗<class_Inventory_method_contains>`

Returns true if contains the amount of the specified :ref:`ItemStack<class_ItemStack>`\ (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`).

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_contains_at:

.. rst-class:: classref-method

``bool`` **contains_at**\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1\ ) |const| :ref:`🔗<class_Inventory_method_contains_at>`

Returns true if the stack index contains the amount of the specified :ref:`ItemStack<class_ItemStack>`\ (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`).

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_contains_category:

.. rst-class:: classref-method

``bool`` **contains_category**\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`, amount\: ``int`` = 1\ ) |const| :ref:`🔗<class_Inventory_method_contains_category>`

Returns true if contains the amount of :ref:`ItemStack<class_ItemStack>`\ (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`) with the specified :ref:`ItemCategory<class_ItemCategory>`.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_contains_category_in_stack:

.. rst-class:: classref-method

``bool`` **contains_category_in_stack**\ (\ stack\: :ref:`ItemStack<class_ItemStack>`, category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const| :ref:`🔗<class_Inventory_method_contains_category_in_stack>`

Returns true if the stack contains the amount of item (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`) with the specified :ref:`ItemCategory<class_ItemCategory>`.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_deserialize:

.. rst-class:: classref-method

|void| **deserialize**\ (\ data\: ``Dictionary``\ ) :ref:`🔗<class_Inventory_method_deserialize>`

Deserializes the inventory with a previously serialized dictionary by rewriting the data of this inventory.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_drop:

.. rst-class:: classref-method

``bool`` **drop**\ (\ item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) :ref:`🔗<class_Inventory_method_drop>`

Drop the specified amount of item(with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`) from inventory and returns true if it was successful.


.. tabs::

 .. code-tab:: gdscript

    inventory.drop("my_item_id", 2) # Drop two my_item_id from inventory



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_drop_all_stacks:

.. rst-class:: classref-method

|void| **drop_all_stacks**\ (\ ) :ref:`🔗<class_Inventory_method_drop_all_stacks>`

Drop all stacks on inventory, ``request_drop_obj`` signal is emitted for each stack.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_drop_from_inventory:

.. rst-class:: classref-method

|void| **drop_from_inventory**\ (\ stack_index\: ``int``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) :ref:`🔗<class_Inventory_method_drop_from_inventory>`

Drop the stack with the specified index.


.. tabs::

 .. code-tab:: gdscript

    inventory.drop_from_inventory(0) # Drop stack with index 0



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_get_amount:

.. rst-class:: classref-method

``int`` **get_amount**\ (\ ) |const| :ref:`🔗<class_Inventory_method_get_amount>`

Returns amount of items.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_get_amount_of_category:

.. rst-class:: classref-method

``int`` **get_amount_of_category**\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const| :ref:`🔗<class_Inventory_method_get_amount_of_category>`

Returns amount of the specified :ref:`ItemCategory<class_ItemCategory>`.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_get_stack_index_with_an_item_of_category:

.. rst-class:: classref-method

``int`` **get_stack_index_with_an_item_of_category**\ (\ category\: :ref:`ItemCategory<class_ItemCategory>`\ ) |const| :ref:`🔗<class_Inventory_method_get_stack_index_with_an_item_of_category>`

Returns the index of the first stack that contains an item of the specified :ref:`ItemCategory<class_ItemCategory>`.

If there is no stack with an item of this category, it returns -1.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_has_space_for:

.. rst-class:: classref-method

``bool`` **has_space_for**\ (\ item\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) |const| :ref:`🔗<class_Inventory_method_has_space_for>`

Returns true if the inventory has space for the specified :ref:`ItemStack<class_ItemStack>`\ (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`).

Note: This method check the constraints too.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_has_stack:

.. rst-class:: classref-method

``bool`` **has_stack**\ (\ stack\: :ref:`ItemStack<class_ItemStack>`\ ) |const| :ref:`🔗<class_Inventory_method_has_stack>`

Returns true if the inventory has a stack with the specified :ref:`ItemStack<class_ItemStack>`.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_is_empty:

.. rst-class:: classref-method

``bool`` **is_empty**\ (\ ) |const| :ref:`🔗<class_Inventory_method_is_empty>`

Returns true if inventory is empty.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_is_full:

.. rst-class:: classref-method

``bool`` **is_full**\ (\ ) |const| :ref:`🔗<class_Inventory_method_is_full>`

Returns true if inventory is full.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_remove:

.. rst-class:: classref-method

``int`` **remove**\ (\ item_id\: ``String``, amount\: ``int`` = 1\ ) :ref:`🔗<class_Inventory_method_remove>`

Removes a amount of the :ref:`ItemStack<class_ItemStack>`\ (with String item_id from :ref:`InventoryDatabase<class_InventoryDatabase>`) from inventory and returns the amount that was not removed.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_remove_at:

.. rst-class:: classref-method

``int`` **remove_at**\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1\ ) :ref:`🔗<class_Inventory_method_remove_at>`

Removes an item_id amount to the specified inventory :ref:`ItemStack<class_ItemStack>` index and returns the remaining value that was not removed.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_remove_from_stack:

.. rst-class:: classref-method

``int`` **remove_from_stack**\ (\ stack\: :ref:`ItemStack<class_ItemStack>`, item_id\: ``String``, amount\: ``int`` = 1\ ) :ref:`🔗<class_Inventory_method_remove_from_stack>`

Remove stack with ``stack`` parameter, set ``emit_signal`` to false to disable events called by :ref:`update_stack()<class_Inventory_method_update_stack>`.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_remove_stack:

.. rst-class:: classref-method

|void| **remove_stack**\ (\ stack_index\: ``int``\ ) :ref:`🔗<class_Inventory_method_remove_stack>`

Removes the stack with the specified index.


.. tabs::

 .. code-tab:: gdscript

    inventory.remove_stack(0) # Remove stack with index 0



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_serialize:

.. rst-class:: classref-method

``Dictionary`` **serialize**\ (\ ) |const| :ref:`🔗<class_Inventory_method_serialize>`

Serializes the inventory returning a dictionary with inventory information.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_set_stack_content:

.. rst-class:: classref-method

|void| **set_stack_content**\ (\ stack_index\: ``int``, item_id\: ``String``, amount\: ``int`` = 1, properties\: ``Dictionary`` = {}\ ) :ref:`🔗<class_Inventory_method_set_stack_content>`

Sets the content of the stack with the specified index.


.. tabs::

 .. code-tab:: gdscript

    inventory.set_stack_content(0, "my_item_id", 2) # Set stack with index 0 to my_item_id and amount 2



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_split:

.. rst-class:: classref-method

``bool`` **split**\ (\ stack_index\: ``int``, amount\: ``int`` = 1\ ) :ref:`🔗<class_Inventory_method_split>`

Splits the stack at the specified index and returns true if it was successful.


.. tabs::

 .. code-tab:: gdscript

    inventory.split(0, 2) # Split stack with index 0 and amount 2



.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_transfer:

.. rst-class:: classref-method

``int`` **transfer**\ (\ stack_index\: ``int``, destination\: :ref:`Inventory<class_Inventory>`, amount\: ``int`` = 1\ ) :ref:`🔗<class_Inventory_method_transfer>`

Transfer the contents of the stack_index ``stack_index`` of this inventory to another inventory (``destination``).

Note: If amount is -1 (default value), the entire contents of the stack are sent to another inventory.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_transfer_at:

.. rst-class:: classref-method

``int`` **transfer_at**\ (\ stack_index\: ``int``, destination\: :ref:`Inventory<class_Inventory>`, destination_stack_index\: ``int``, amount\: ``int`` = 1\ ) :ref:`🔗<class_Inventory_method_transfer_at>`

Transfer the contents of the stack_index ``stack_index`` of this inventory to another stack_index (``destination_stack_index``) of destination **Inventory**.

Note: If amount is -1 (default value), the entire contents of the stack are sent to another inventory.

.. rst-class:: classref-item-separator

----

.. _class_Inventory_method_update_stack:

.. rst-class:: classref-method

|void| **update_stack**\ (\ stack_index\: ``int``\ ) :ref:`🔗<class_Inventory_method_update_stack>`

Updates the stack with the specified index.

This method is called automatically when a stack is added or removed, but it can also be called manually to update the stack.


.. tabs::

 .. code-tab:: gdscript

    inventory.update_stack(0) # Update stack with index 0



Note: This method emits the :ref:`updated_stack<class_Inventory_signal_updated_stack>` signal.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
