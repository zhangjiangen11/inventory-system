:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc_classes/Recipe.xml.

.. _class_Recipe:

Recipe
======

**Inherits:** ``Resource``

Resource that contains the definition of items needed for :ref:`Crafting<class_Crafting>` at the :ref:`CraftStation<class_CraftStation>`.

.. rst-class:: classref-introduction-group

Description
-----------

This recipe is used by :ref:`CraftStation<class_CraftStation>` to list all possible recipes available, A :ref:`CraftStation<class_CraftStation>` load available recipes in the :ref:`Node._ready()<class_Node_method__ready>`.

Note: :ref:`CraftStation<class_CraftStation>` must have the same :ref:`CraftStationType<class_CraftStationType>` as the recipe for it to work. If the recipe does not have :ref:`station<class_Recipe_property_station>` set it will be listed on a :ref:`CraftStation<class_CraftStation>` that also does not have :ref:`CraftStation.type<class_CraftStation_property_type>` set.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +----------------------------------------------------------------+-------------------------------------------------------------+---------+
   | :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] | :ref:`ingredients<class_Recipe_property_ingredients>`       | ``[]``  |
   +----------------------------------------------------------------+-------------------------------------------------------------+---------+
   | :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] | :ref:`products<class_Recipe_property_products>`             | ``[]``  |
   +----------------------------------------------------------------+-------------------------------------------------------------+---------+
   | :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] | :ref:`required_items<class_Recipe_property_required_items>` | ``[]``  |
   +----------------------------------------------------------------+-------------------------------------------------------------+---------+
   | :ref:`CraftStationType<class_CraftStationType>`                | :ref:`station<class_Recipe_property_station>`               |         |
   +----------------------------------------------------------------+-------------------------------------------------------------+---------+
   | ``float``                                                      | :ref:`time_to_craft<class_Recipe_property_time_to_craft>`   | ``4.0`` |
   +----------------------------------------------------------------+-------------------------------------------------------------+---------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Recipe_property_ingredients:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **ingredients** = ``[]`` :ref:`ðŸ”—<class_Recipe_property_ingredients>`

.. rst-class:: classref-property-setget

- |void| **set_ingredients**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **get_ingredients**\ (\ )

:ref:`ItemStack<class_ItemStack>` list for items needed for crafting. If :ref:`CraftStation.only_remove_ingredients_after_craft<class_CraftStation_property_only_remove_ingredients_after_craft>` is true these items are removed from :ref:`Inventory<class_Inventory>` after crafting, if false will be removed at the beginning of the crafting process, after calling :ref:`CraftStation.craft()<class_CraftStation_method_craft>`.

.. rst-class:: classref-item-separator

----

.. _class_Recipe_property_products:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **products** = ``[]`` :ref:`ðŸ”—<class_Recipe_property_products>`

.. rst-class:: classref-property-setget

- |void| **set_products**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **get_products**\ (\ )

List of stacked items from the result after crafting is completed. These items must be added in :ref:`Inventory<class_Inventory>` after crafting is complete.

.. rst-class:: classref-item-separator

----

.. _class_Recipe_property_required_items:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **required_items** = ``[]`` :ref:`ðŸ”—<class_Recipe_property_required_items>`

.. rst-class:: classref-property-setget

- |void| **set_required_items**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`ItemStack<class_ItemStack>`\] **get_required_items**\ (\ )

:ref:`ItemStack<class_ItemStack>` of items that are required for crafting. Unlike :ref:`ingredients<class_Recipe_property_ingredients>` items, these items are not removed after the crafting process.

.. rst-class:: classref-item-separator

----

.. _class_Recipe_property_station:

.. rst-class:: classref-property

:ref:`CraftStationType<class_CraftStationType>` **station** :ref:`ðŸ”—<class_Recipe_property_station>`

.. rst-class:: classref-property-setget

- |void| **set_station**\ (\ value\: :ref:`CraftStationType<class_CraftStationType>`\ )
- :ref:`CraftStationType<class_CraftStationType>` **get_station**\ (\ )

:ref:`CraftStationType<class_CraftStationType>` required for this crafting to work.

.. rst-class:: classref-item-separator

----

.. _class_Recipe_property_time_to_craft:

.. rst-class:: classref-property

``float`` **time_to_craft** = ``4.0`` :ref:`ðŸ”—<class_Recipe_property_time_to_craft>`

.. rst-class:: classref-property-setget

- |void| **set_time_to_craft**\ (\ value\: ``float``\ )
- ``float`` **get_time_to_craft**\ (\ )

Time (in ticks) to complete the crafting process.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
